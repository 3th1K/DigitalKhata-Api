<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="0001_DESCRIPTION" xml:space="preserve">
    <value>Token cannot be generated</value>
  </data>
  <data name="0001_SOLUTION" xml:space="preserve">
    <value>Please verify credentials in the request</value>
  </data>
  <data name="0002_DESCRIPTION" xml:space="preserve">
    <value>User is already registered with same username/email </value>
  </data>
  <data name="0002_SOLUTION" xml:space="preserve">
    <value>If you are an existing user, please login. If new user then consider registering with a different username/email</value>
  </data>
  <data name="0003_DESCRIPTION" xml:space="preserve">
    <value>Provided payer id is not a valid user id.</value>
  </data>
  <data name="0003_SOLUTION" xml:space="preserve">
    <value>Please verify and provide a correct user id as payer id</value>
  </data>
  <data name="0004_DESCRIPTION" xml:space="preserve">
    <value>Provided payee id is not a valid user id.</value>
  </data>
  <data name="0004_SOLUTION" xml:space="preserve">
    <value>Please verify and provide a correct user id as payee id</value>
  </data>
  <data name="0005_DESCRIPTION" xml:space="preserve">
    <value>The amount provided in the expense is not a valid amount</value>
  </data>
  <data name="0005_SOLUTION" xml:space="preserve">
    <value>Expense amount cannot be less than 1</value>
  </data>
  <data name="0006_DESCRIPTION" xml:space="preserve">
    <value>Creating of expense was unsuccessful</value>
  </data>
  <data name="0006_SOLUTION" xml:space="preserve">
    <value>Please provide correct data to process expense request successfully.</value>
  </data>
  <data name="0007_DESCRIPTION" xml:space="preserve">
    <value>Same user ids are provided</value>
  </data>
  <data name="0007_SOLUTION" xml:space="preserve">
    <value>Transaction history cannot be fetched for same user. Provide different user ids to get the transaction history between specific users</value>
  </data>
  <data name="0008_DESCRIPTION" xml:space="preserve">
    <value>Provided user ids are not valid. Can be one or both of them.</value>
  </data>
  <data name="0008_SOLUTION" xml:space="preserve">
    <value>Please verify the provided user ids. Provide valid user ids.</value>
  </data>
  <data name="0009_DESCRIPTION" xml:space="preserve">
    <value>Provided user id is not valid</value>
  </data>
  <data name="0009_SOLUTION" xml:space="preserve">
    <value>Please provide a valid user id</value>
  </data>
  <data name="0010_DESCRIPTION" xml:space="preserve">
    <value>No search result for the searched username</value>
  </data>
  <data name="0010_SOLUTION" xml:space="preserve">
    <value>Please try with some other search query.</value>
  </data>
  <data name="0011_DESCRIPTION" xml:space="preserve">
    <value>User did not made any transactions and does not have any expenses</value>
  </data>
  <data name="0011_SOLUTION" xml:space="preserve">
    <value>User should make a transaction to see the expense made</value>
  </data>
  <data name="err_add_expense_failure" xml:space="preserve">
    <value>0006:Cannot create expense</value>
  </data>
  <data name="err_invalid_expense_amount" xml:space="preserve">
    <value>0005:Invalid expense amount</value>
  </data>
  <data name="err_invalid_payee_id" xml:space="preserve">
    <value>0004:Invalid payee id</value>
  </data>
  <data name="err_invalid_payer_id" xml:space="preserve">
    <value>0003:Invalid payer id</value>
  </data>
  <data name="err_invalid_user_id" xml:space="preserve">
    <value>0009:Invalid user id</value>
  </data>
  <data name="err_no_user_expenses" xml:space="preserve">
    <value>0011:User does not have any expenses</value>
  </data>
  <data name="err_search_user_not_found" xml:space="preserve">
    <value>0010:No users found wiith the given username</value>
  </data>
  <data name="err_token_generation_failed" xml:space="preserve">
    <value>0001:Token generation failed</value>
  </data>
  <data name="err_transaction_history_same_users" xml:space="preserve">
    <value>0007:Both user ids are same</value>
  </data>
  <data name="err_transaction_history_user_not_found" xml:space="preserve">
    <value>0008:One or both user id is invalid</value>
  </data>
  <data name="err_user_exists" xml:space="preserve">
    <value>0002:User already exists</value>
  </data>
</root>